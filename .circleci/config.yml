version: 2
jobs:

  integrate:
    working_directory: /app
    docker:
      - image: circleci/python:3.6.1 # Docker with python 3.60
    steps:
      - checkout
      - run:
          name: Environment
          command: |
            git --version
            env | sort | grep "CIRCLE"
      - run:
          name: Intro
          command: ./play --manuscript .circleci/manuscript.yml --part gitintro
      - run:
          name: Swap to target branch and test integration
          command: ./play --manuscript .circleci/manuscript.yml --part integrate

  build:
    working_directory: /app
    docker:
      - image: circleci/python:3.6.1 # Docker with python 3.60
    steps:
      - checkout
      - run:
          name: Swap to target branch and integrate
          command: ./play --manuscript .circleci/manuscript.yml --part integrate
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python test/manage.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports
  deliver:
    working_directory: /app
    docker:
      - image: circleci/python:3.6.1 # Docker with python 3.60
    steps:
      - checkout

      - run:
          name: Intro
          command: ./play --manuscript .circleci/manuscript.yml --part gitintro
      - run:
          name: integrate
          command: ./play --manuscript .circleci/manuscript.yml --part integrate
      - run:
          name: Deliver
          command: ./play --manuscript .circleci/manuscript.yml --part deliver
  dev_test:
    working_directory: /app
    docker:
      - image: circleci/python:3.6.1 # Docker with python 3.60
    steps:
      - checkout
      - run:
          name: Swap to target branch and integrate
          command: ./play --manuscript .circleci/manuscript.yml --part integrate
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python test/manage.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports


workflows:
  version: 2
  gitlabelwizard:
    jobs:
      - integrate:
          filters:
            branches:
              only:
                - /ready\/.+/ 
      - build:
          requires:
            - integrate
      - deliver:
          requires:
            - build
      - dev_test:
          filters:
            branches:
              only:
                - /\d+\-.+/
